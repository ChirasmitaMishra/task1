name: Pipeline-for-Multi-environment
on:
  push: 
     branches:
       - main
       - develop
     
  pull_request:
     branches:
       - main
       - develop
jobs:
  push-to-dockerhub-staging-env: 
     runs-on: self-hosted
     environment: staging
     steps:
        - uses: actions/checkout@v3
        - name: Run a one-line script
          run: "echo Hello, World"
        - name: Login to my Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_HUB_SECRET }}
        - name: Build docker image
          run: docker build . -t ${{secrets.DOCKER_USERNAME}}/task1:latest
        - name: Push docker image to Docker hub
          run: docker push ${{secrets.DOCKER_USERNAME}}/task1:latest

  push-to-ecr-staging-env: 
     runs-on: self-hosted
     environment: staging
     steps:
    
     - name: Configure AWS Credentials
       uses: aws-actions/configure-aws-credentials@v1
       with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

   
     - name: Log in to Amazon ECR
       id: login-ecr
       uses: aws-actions/amazon-ecr-login@v1

     - name: Build, tag, and push image to Amazon ECR
       env:
        ECR_REGISTRY: public.ecr.aws/y8h2p9f1
        ECR_REPOSITORY: self-hosted-ecr
        IMAGE_TAG: latest
       run: |
        aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/y8h2p9f1
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  push-to-dockerhub-production-env: 
     runs-on: self-hosted
     environment: production
     steps:
        - uses: actions/checkout@v3
        - name: Run a one-line script
          run: "echo Hello, World"
        - name: Login to my Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_HUB_SECRET }}
        - name: Build docker image
          run: docker build . -t ${{secrets.DOCKER_USERNAME}}/task1:latest
        - name: Push docker image to Docker hub
          run: docker push ${{secrets.DOCKER_USERNAME}}/task1:latest
  push-to-ecr-production-env: 
     runs-on: self-hosted
     environment: production
     steps:
    
     - name: Configure AWS Credentials
       uses: aws-actions/configure-aws-credentials@v1
       with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

   
     - name: Log in to Amazon ECR
       id: login-ecr
       uses: aws-actions/amazon-ecr-login@v1

     - name: Build, tag, and push image to Amazon ECR
       env:
        ECR_REGISTRY: public.ecr.aws/y8h2p9f1
        ECR_REPOSITORY: self-hosted-ecr
        IMAGE_TAG: latest
       run: |
        aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/y8h2p9f1
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
